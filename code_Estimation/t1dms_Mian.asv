close all
clear;
clc;

Path = ['/home/tanabe/code/miwa/database/:',...
    '/home/tanabe/code/t1dms_data/:',...
    '/home/tanabe/code/t1dms_data/subjects/:',...
    '/home/tanabe/code/t1dms_data/simu_data/:',...
    '/home/tanabe/code/t1dms_continuous/:'];
addpath(Path);

%%%%

for i =3 %subject
    for j = 1 %seed

        d = "linear"; %ssogmm inequality linear
        subject_num = i;
        seed = j;


        if subject_num == 10
            load(['adult#0',num2str(subject_num),'.mat'],'BW','Ib','Gb');
        else
            load(['adult#00',num2str(subject_num),'.mat'],'BW','Ib','Gb');
        end

        load(['t1dms_adult',num2str(subject_num),'_seed',num2str(seed),'.mat'])

        %seed9によるパラメータ推定結果を利用
         % load(['t1dms_adult',num2str(subject_num),'_seed9.mat'],'p_esti','x_esti')


        %%%
        Ts = 1;
        n_day = 4;
        t_end = 1440*n_day;

        %data procssing
        % modes = data_ssogmm.mode;
        if Ts==1
            modes = repelem(modes,5);
        elseif Ts==2.5
            modes = repelem(modes,2);
        end

        N=size(modes,2);
        t_span = 200:Ts:200+1075*5-1;
        N_step = 1:N;

        %%%
        G = data.G.signals.values';

        insulin = data.injection.signals.values';
        meal = 1000*data.CHO.signals.values;

        %%%   ssogmm
        model = ssogmmCL("u_inb",(1/6)*Ib,...
            "BW",BW,...
            "G_b",Gb);

        model.p_0 = p_esti;
        model.x_0 = [x_esti(:,1)];%

        data_ssogmm = simu_t1dm_ssogmm(Ts,t_end,t_span,modes,...
            "insulin",insulin,...
            "meal",meal,...
            "ssogmm",model,"dynamics",d,"q",q_esti);

        %%%%%
        %%%%%
        if d == "inequality"
            %% mode %%
            Q = [data_ssogmm.xs(3,:);data_ssogmm.xs(4,:)];
            submodel = GastrointestinalSubmodelCL(p_esti,q_esti);

            Ra = [];
            inequality_modes = [];
            for t = 1:1153
                [Ra(t),inequality_modes(t)] = submodel.getR_a(Q(:,t),data_ssogmm.Ds(t));
            end

            f=figure;
            stairs(inequality_modes,'LineWidth',2)
            hold on
            stairs(cutting_inds,modes,'LineWidth',1)
            ylim([-0.5 1.5])
            legend('不等式','モード推定')
        end


        %discrete simulation
        %%%common setting
        Xs = data_ssogmm.xs;

        %estimate Xinit
        x_ini = x_esti(:,500);
        x_ini = x_ini([1 2 5 6 7]);

        %feedback
        % Y = G(data_ssogmm.ts);
        Y = data_ssogmm.Gs;

        %%input
        p = p_esti;
        u_m = data_ssogmm.meal;
        u_i = data_ssogmm.insulin;
        modes = data_ssogmm.modes;

        %%Ra
        R_a = get_Ra(Xs(4,:),p,modes,N);

        [xe,A_d,B_d1,B_d2,C,i_b,Ge] = linear_matrix(p,Ts);
        U = [u_m;u_i;R_a;modes];
        

        %%%

        %%%linear
        delta_x=zeros(5,N);
        x_linear=zeros(5,N);

        delta_x(:,1) = Xs([1 2 5 6 7],1)-xe;
        x_linear(:,1) = Xs([1 2 5 6 7],1);

        for k=2:N

            delta_u_i = u_i(:,k-1)-i_b;

            delta_x(:,k) = A_d*delta_x(:,k-1) + B_d1*delta_u_i + B_d2*R_a(:,k-1);
            x_linear(:,k) = delta_x(:,k) + xe;
        end


        %observer
        [L,pole] = gain(p,Ts);

        delta_xob = zeros(5,N);
        xob = zeros(5,N);

        delta_xob(:,1) = x_ini - xe;
        xob(:,1) = x_ini;

        for k=2:N

            delta_y = Y(:,k-1) - Ge;
            delta_u_i = u_i(:,k-1) - i_b;

            delta_xob(:,k) = A_d*delta_xob(:,k-1) + B_d1*delta_u_i + B_d2*R_a(:,k-1) + L*(delta_y - C*delta_xob(:,k-1));
            xob(:,k) = delta_xob(:,k) + xe;
        end



        %%ssogmm
        dic = dic_ssogmmCL(p,Ts,N,U);
        x_ssogmm = dic.dicrete(Xs,"ZOH");


        %kalman
        A = dic.A;
        A_di = dic.A_di;
        A_dx = dic.A_dx;
        C = [1 0 0 0 0];

        xhat = zeros(5,N);

        a = [1,1,1,1,1];
        P = 1e-6*diag(a);
        xhat(:,1) = x_ini;

        %%
        Q = eps; %システム雑音
        R = eps; %観測雑音
        % v = randn(1,N)*sqrtm(Q);
        % w = randn(1,N)*sqrtm(R);
        B = [1,1e-4,1,1,1];
        B_diag = diag(B);
        g_block = [];
        v = [];
        v = [v,Y(1,1)-x_ini(1,1)];
        for k = 2:N

            xhatm = dic.dynamics(xhat(:,k-1),k);
            v = [v,Y(:,k) - xhatm(1,1)];

            A_tmp = [zeros(3,2) A_di];
            A_temp =[A(xhat(1,k-1),xhat(2,k-1)) ; A_tmp];
            % Pm = A(xhat(1,k-1),xhat(2,k-1))*P*A(xhat(1,k-1),xhat(2,k-1)) + b*Q*b';
            Pm = A_temp*P*A_temp' + B_diag*Q*B_diag';

            g = Pm*C'/(C*Pm*C' + R);

            xhat(:,k) = xhatm + g*(Y(:,k) - C*xhatm);
            P = (eye(5) - g*C)*Pm;
            g_block = [g_block,g];
        end

        quarter =1 ;
        E_ob = rmse(xob(1,quarter:end)',Y(:,quarter:end)');
        E_kalman = rmse(xhat(1,quarter:end)',Y(:,quarter:end)');


        quarter = floor(size(N_step,2)/4)*3;
        E_ob4 = rmse(xob(1,quarter:end)',Y(:,quarter:end)');
        E_kalman4 = rmse(xhat(1,quarter:end)',Y(:,quarter:end)');
        ssogmm5 = Xs([1,2,5,6,7],:);
        % 
        % f = figure;
        % f.Position = [281,234,1609,736];
        % tiledlayout(2,3)
        % for k = 1:5
        %     if k == 1
        %         nexttile
        %         plot(G)
        %         hold on
        %         plot(data_ssogmm.ts,ssogmm5(k,:))
        %         plot(data_ssogmm.ts,xob(k,:),'.')
        %         plot(data_ssogmm.ts,xhat(k,:),'.')
        %         hold off
        %         legend('uva/padova','ssogmm','observer','kalman')
        %     else
        %     nexttile
        %     hold on
        %     plot(data_ssogmm.ts,ssogmm5(k,:))
        %     plot(data_ssogmm.ts,xob(k,:),'.')
        %     plot(data_ssogmm.ts,xhat(k,:),'.')
        %     hold off
        %     legend('ssogmm','observer','kalman')
        %     E_ob4 = rmse(xob(k,quarter:end)',ssogmm5(k,quarter:end)');
        %     E_kalman4 = rmse(xhat(k,quarter:end)',ssogmm5(k,quarter:end)');
        %     end
        %     xlabel(['Eob',num2str(E_ob4),'Ekalman',num2str(E_kalman4)])
        % end
        % nexttile
        % stairs(data_ssogmm.ts,v);
        % 
        % figure
        % plot(G)
        % hold on
        % plot(data_ssogmm.ts,x_linear(1,:),'.')
        % plot(data_ssogmm.ts,x_ssogmm(1,:),'.')
        % plot(data_ssogmm.ts,data_ssogmm.Gs)
        % legend('uva/padova','linear','ssogmm','ssogmm')
        % 
        % figure
        % tiledlayout(2,4)
        % for k = 1:7
        %     nexttile
        %     plot(data_ssogmm.xs(k,:))
        % end
       
% data_ts1.G = G;
%         data_ts1.ssogmm = data_ssogmm;
%         data_ts1.xl = x_linear;
%         data_ts1.xs = x_ssogmm;
%         data_ts1.ob = xob;
%         data_ts1.hat = xhat;
%         data_ts1.Ekal4 = E_kalman4;
%         data_ts1.Ekal = E_kalman;
%         data_ts1.Eob4 = E_ob4;
%         data_ts1.Eob = E_ob;
% 
%         savefile = 'data000';
%         filename = ['adult',num2str(subject_num)];
%         save(fullfile(savefile,filename),"data_ts1",'-append')
    end
end

    % 
    % for k = 1:5
    %     f = figure;
    % f.Position = [272,453,1577,454];
    %     if k == 1
    %         plot(G,LineWidth=2)
    %         hold on
    %         plot(data_ssogmm.ts,ssogmm5(k,:),'Color',[0.4940,0.1840,0.5560],LineWidth=1)
    %         plot(data_ssogmm.ts,xob(k,:),'.','Color',[0.8500,0.3250,0.0980 ],LineWidth=2)
    %         plot(data_ssogmm.ts,xhat(k,:),'.','Color',[0.9290,0.6940,0.1250],LineWidth=2)
    %         hold off
    %         legend('UVA/Padova','SSOGMM','Observer','EKF')
    %     else
    %         hold on
    %         plot(data_ssogmm.ts,ssogmm5(k,:),'Color',[0.4940,0.1840,0.5560],LineWidth=1)
    %         plot(data_ssogmm.ts,xob(k,:),'.',LineWidth=2)
    %         plot(data_ssogmm.ts,xhat(k,:),'.',LineWidth=2)
    %         hold off
    %         legend('SSOGMM','Observer','EKF')
    %     end
    %     ax = gca;
    %     saveFig(ax,'pdf')
    % end
    % 
    % % 
    % figure
    % tiledlayout(2,3)
    % for i = 1:5
    %     nexttile
    %     stairs(data_ssogmm.ts(1:end-1),g_block(i,:))
    % end


    % 
    % f = figure;
    %     f.Position = [281,234,1609,736];
    %     tiledlayout(2,3)
    %     for k = 1:5
    %         if k == 1
    %             nexttile
    %             hold on
    %             plot(data_ssogmm.ts,ssogmm5(k,:))
    %             plot(data_ssogmm.ts,x_linear(k,:))
    %             plot(data_ssogmm.ts,xob(k,:),'.')
    %             hold off
    %             legend('ssogmm','dis','observer')
    %             E_ob4 = rmse(xob(k,quarter:end)',ssogmm5(k,quarter:end)');
    %         E_kalman4 = rmse(xhat(k,quarter:end)',ssogmm5(k,quarter:end)');
    %         else
    %         nexttile
    %         hold on
    %         plot(data_ssogmm.ts,ssogmm5(k,:))
    %         plot(data_ssogmm.ts,xob(k,:),'.')
    %         hold off
    %         legend('ssogmm','observer')
    %         E_ob4 = rmse(xob(k,quarter:end)',ssogmm5(k,quarter:end)');
    %         E_kalman4 = rmse(xhat(k,quarter:end)',ssogmm5(k,quarter:end)');
    %         end
    %         xlabel(['Eob',num2str(E_ob4),'Ekalman',num2str(E_kalman4)])
    %     end